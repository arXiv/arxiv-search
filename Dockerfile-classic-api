# arxiv/classic-api
#
# Defines the runtime for the arXiv classic API, which provides a metadata
# query API backed by Elasticsearch.

# File: Dockerfile-classic-api
# Desc: arxiv search classic api
# Use:
#   docker build --build-arg GIT_COMMIT=$(git rev-parse HEAD) \
#          -t "arxiv/arxiv-search-classic-api" -f ./Dockerfile-classic-api .
#   docker run -it --env-file=env -p 8080:8080 arxiv/arxiv-search-classic-api

FROM python:3.10.9-buster

ARG GIT_COMMIT

ENV \
    APP_HOME=/app \
    ELASTICSEARCH_PASSWORD=changeme \
    ELASTICSEARCH_SERVICE_HOST=127.0.0.1 \
    ELASTICSEARCH_SERVICE_PORT=9200 \
    ELASTICSEARCH_SERVICE_PORT_9200_PROTO=http \
    GIT_COMMIT=$GIT_COMMIT \
    METADATA_ENDPOINT=https://arxiv.org/docmeta_bulk/ \
    PIP_DEFAULT_TIMEOUT=100 \
    PIP_DISABLE_PIP_VERSION_CHECK=on \
    PIP_NO_CACHE_DIR=off \
    POETRY_VERSION=1.2.2 \
    PYTHONFAULTHANDLER=1 \
    PYTHONHASHSEED=random \
    PYTHONUNBUFFERED=1 \
    TRACE=1

WORKDIR $APP_HOME
COPY poetry.lock pyproject.toml ./
COPY app.py wsgi.py uwsgi.ini ./
COPY schema ./schema
COPY mappings ./mappings
COPY search ./search
RUN echo $GIT_COMMIT > ./git-commit.txt

RUN pip install "gunicorn==20.1.0" "poetry==$POETRY_VERSION"
RUN poetry config virtualenvs.create false && \
    poetry install --no-interaction --no-ansi

EXPOSE 8080

# See cicd/cloudbuild-master-pr.yaml for use in integration tests.
ENV GUNICORN gunicorn --bind :8080 \
    --workers 1 --threads 8 --timeout 0 "search.factory:create_classic_api_web_app()"

CMD exec $GUNICORN